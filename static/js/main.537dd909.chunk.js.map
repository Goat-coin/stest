{"version":3,"sources":["config.js","utils/cache.js","contexts/theme.js","contexts/wallet.js","contexts/notifications.js","utils/big-number.js","utils/request.js","contexts/stats.js","contexts/bonuses.js","components/Notification.js","serviceWorker.js","pages/Header.js","components/Paper.js","pages/TopStats.js","pages/Nav.js","pages/Withdraw.js","utils/sleep.js","components/Balance.js","pages/Deposit.js","pages/Stats.js","components/Loader.js","pages/Bonus.js","pages/ConnectWallet.js","pages/App.js","index.js"],"names":["NETWORKS","56","stakingAddress","window","location","href","indexOf","drops","Map","97","ROUTER_BASE_NAME","process","REACT_APP_ROUTER_BASE_NAME","NETWORK","API_URL","REACT_APP_API_URL","cache","k","v","arguments","length","localStorage","removeItem","setItem","JSON","stringify","parse","getItem","e","ThemeContext","React","createContext","ThemeProvider","children","useState","theme","setTheme","Provider","value","toggleTheme","newTheme","useTheme","context","useContext","Error","getProps","isDark","secondaryColor","READ_PROVIDER","ethers","providers","JsonRpcProvider","STAKING_ADDRESS","READ_STAKING_CONTRACT","Contract","STAKING_ABI","WalletContext","WalletProvider","isLoaded","setIsLoaded","isConnecting","setIsConnecting","chainId","setChainId","lpName","lpAddress","setLpAddress","lpDecimals","goatAddress","setGoatAddress","goatDecimals","wrappedBNBDecimals","signer","setSigner","address","setAddress","isOnWrongNetwork","useMemo","stakingContract","lpContract","LP_ABI","goatContract","ERC20_ABI","wrappedBNBContract","stopConnecting","connectToCached","a","cachedWallet","metamask","connectMetamask","bsc","connectBsc","trust","connectTrust","ethereum","enable","setProvider","BinanceChain","isTrust","web3Provider","on","reload","provider","Web3Provider","getNetwork","c","forEach","o","parseInt","getSigner","getAddress","Promise","all","stakingToken","rewardsToken","useEffect","load","cakeDecimals","startConnecting","disconnect","useWallet","config","cakeContract","cakeAddress","NotificationsContext","NotificationsProvider","enqueueSnackbar","useSnackbar","showTxNotification","description","hash","type","persist","showErrorNotification","msg","message","error","responseText","showSuccessNotification","title","tx","startNotification","endNotification","makeTx","wait","useNotifications","toformat","BigJs","toFixed","b","precision","isZero","Big","div","toFormat","formatUnits","decimals","pow","eq","n","toString","get","url","query","qs","fetch","json","api","GOAT_APY","StatsContext","max","t","gte","StatsProvider","totalStaked","totalLockedShares","unlockScheduleCount","totalStakingShares","totalLocked","totalSupply","setTotalSupply","startBonus","bonusPeriodSec","poolBNBBalance","setPoolBNBBalance","poolGoatBalance","setPoolGoatBalance","schedules","bnbUSDPrice","setBNBUSDPrice","goatUSDPrice","setGoatUSDPrice","availableGoatRewards","setAvailableGoatRewards","availableCakeRewards","totalStakedFor","setTotalStakedFor","totalStakingShareSeconds","setTotalStakingShareSeconds","userStakingShareSeconds","setUserStakingShareSeconds","totalUserRewards","setTotalUserRewards","totalUSDDeposits","A","p","m","w","E","T","C","O","mul","P","I","add","stakingEndSec","endAtSec","hourlyUnlockRate","Date","now","i","scheduleSharesEmittedPerHour","reduce","schedule","lte","min","sub","durationSec","initialLockedShares","apy","BNB_APY","rewardMultiplier","maxMultiplier","minMultiplier","z","gt","bnbPonusPoolSharePercentage","bnbPonusPoolShareAmount","loadPoolStats","balanceOf","getCoinUsdPrices","loadUserStats","earned","useStats","assetsCoinGeckoIds","request","ids","join","vs_currencies","prices","map","id","usd","BonusesContext","BonusesProvider","setDrops","hasPendingBonusClaim","filter","d","hasPendingClaim","isMounted","unsubs","dropsConfig","Array","from","entries","contractAddress","date","contract","DROP_ABI","loadDrops","loadDrop","ds","claimInfo","didClaim","canClaim","isClaimed","index","claimEvent","filters","Claimed","push","off","unsub","useBonuses","useStyles","makeStyles","paper","color","container","padding","display","textDecoration","icon","marginRight","close","position","top","right","cursor","background","success","small","fontSize","TYPES","TxIcon","notification","classes","className","target","rel","ErrorIcon","clsx","SuccessIcon","closeSnackbar","Content","Paper","onClick","Close","style","Boolean","hostname","match","boxShadow","palette","primary","main","account","breakpoints","down","Component","shortAddress","slice","AppBar","Toolbar","Typography","variant","Button","Tooltip","IconButton","aria-label","elevation","paddingTop","gridTemplateColumns","columnGap","box","flexGrow","flexDirection","boxTip","boxTitle","link","earnedReward","setEarnedReward","getEarned","getReward","stats","name","Box","ml","src","alt","width","height","tip","then","response","s","StatBox","key","marginTop","backgroundColor","zIndex","borderTopLeftRadius","borderTopRightRadius","containerInner","justifyContent","borderBottom","active","borderBottomColor","secondary","withRouter","path","isDeposit","isWithdraw","to","transform","transformOrigin","maxButton","withdrawButton","rewards","borderRadius","startConnectingWallet","isWithdrawing","setIsWithdrawing","inputAmount","setInputAmount","withdrawMaxAmount","setWithdrawMaxAmount","maxWithdrawAmount","setMaxWithdrawAmount","withdrawAmount","inputAmountBN","parseUnits","onConnectOrWithdraw","withdraw","exit","onSetWithdrawMaxAmount","TextField","label","step","input","InputLabelProps","shrink","fullWidth","onChange","pl","disabled","mt","ms","promisify","setTimeout","header","isETH","tokenAddress","ETH","ERC20","balance","setBalance","getBalance","setDecimals","symbol","setSymbol","ERC20_CONTRACT_ABI","onBalanceChange","sleep","transferEvent","Transfer","subscribe","toUpperCase","depositButton","STEPS","activeStep","Stepper","Step","StepLabel","mx","mb","exact","component","Deposit","GetLPTokens","history","connectWalletOrNext","isApproving","setIsApproving","isApproved","setIsApproved","isDepositing","setIsDepositing","depositMaxAmount","setDepositMaxAmount","maxDepositAmount","setMaxDepositAmount","depositAmount","onConnectOrApproveOrDeposit","deposit","approve","checkAllowance","stake","onSetDepositMaxAmount","allowance","Balance","event","gridTemplateRows","rowGap","Countdown","duration","setDuration","setInterval","moment","unix","isBefore","utc","clearInterval","size","opacity","fullscreen","alignItems","left","bottom","CircularProgress","status","lineHeight","x","Dialog","onClose","aria-labelledby","open","Table","tablex","TableHead","TableRow","TableCell","align","TableBody","drop","Drop","Loader","isWorking","setIsWorking","claim","amount","proof","rowx","scope","Number","wallet","margin","net","tabContent","announcement","announcementHere","App","basename","TopStats","Nav","Withdraw","Stats","Bonus","ConnectWallet","snackbar","Shell","muiTheme","createMuiTheme","typography","fontFamily","borderColor","overrides","MuiButton","root","MuiPaper","rounded","MuiDialog","useMuiTheme","document","documentElement","classList","contains","remove","CssBaseline","maxSnack","anchorOrigin","vertical","horizontal","content","data","Notification","getElementById","createElement","setAttribute","body","appendChild","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.537dd909.chunk.js","sourcesContent":["export const APP_SLUG = 'goat';\r\n\r\nexport const APP_TITLE = 'Goat Staking';\r\n\r\nexport const CACHE_WALLET_KEY = 'wallet';\r\n\r\nexport const BORDER_RADIUS = 8;\r\n\r\nexport const IS_TESTNET = false; //~window.location.href.indexOf('testnet');\r\n\r\nexport const NETWORKS = {\r\n  56: {\r\n    stakingAddress: ~window.location.href.indexOf('beta')\r\n      ? '0x7044326135a8f416dd4a1d48bc47f808879ed425'\r\n      : ~window.location.href.indexOf('test')\r\n      ? '0x7044326135a8f416dd4a1d48bc47f808879ed425'\r\n      : '0x7044326135a8f416dd4a1d48bc47f808879ed425',\r\n    drops:\r\n      ~window.location.href.indexOf('localhost') ||\r\n      ~window.location.href.indexOf('test')\r\n        ? new Map([\r\n            ['0xC32F5887840314aB000dbA3125d84466B97bd08B', '2021-01-25'],\r\n          ])\r\n        : new Map([\r\n            ['0xC32F5887840314aB000dbA3125d84466B97bd08B', '2021-01-25'],\r\n          ]),\r\n  },\r\n  97: {\r\n    stakingAddress: '',\r\n  },\r\n};\r\n\r\nexport const NETWORK_NAME = IS_TESTNET ? 'testnet' : 'mainnet';\r\n\r\nexport const NETWORK_CHAIN_ID = IS_TESTNET ? 97 : 56;\r\n\r\nexport const READ_WEB3_PROVIDER = IS_TESTNET\r\n  ? 'https://data-seed-prebsc-1-s1.binance.org:8545'\r\n  : 'https://bsc-dataseed1.binance.org:443';\r\n\r\nexport const EMPTY_CALL_DATA =\r\n  '0x0000000000000000000000000000000000000000000000000000000000000001';\r\n\r\nexport const ROUTER_BASE_NAME = process.env.REACT_APP_ROUTER_BASE_NAME;\r\n\r\nexport const SECONDARY_COLOR = '#ffa132';\r\n\r\nexport const NETWORK = NETWORKS[NETWORK_CHAIN_ID];\r\n\r\nexport const API_URL = process.env.REACT_APP_API_URL;\r\n","export default function cache(k, v) {\r\n  switch (arguments.length) {\r\n    case 2:\r\n      if (v === null) return window.localStorage.removeItem(k);\r\n      return window.localStorage.setItem(k, JSON.stringify(v));\r\n\r\n    case 1:\r\n      try {\r\n        return JSON.parse(window.localStorage.getItem(k));\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n\r\n      default:\r\n        return;\r\n  }\r\n}","import React from 'react';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { BORDER_RADIUS, SECONDARY_COLOR } from '../config';\r\nimport cache from '../utils/cache';\r\n\r\nconst ThemeContext = React.createContext(null);\r\n\r\nexport function ThemeProvider({ children }) {\r\n  const [theme, setTheme] = React.useState(cache('theme') || 'dark');\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(theme => {\r\n      const newTheme = theme === 'dark' ? 'light' : 'dark';\r\n      cache('theme', newTheme);\r\n      return newTheme;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme,\r\n        toggleTheme,\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTheme() {\r\n  const context = React.useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('Missing theme context');\r\n  }\r\n  const { theme, toggleTheme } = context;\r\n  return {\r\n    theme,\r\n    toggleTheme,\r\n    ...getProps(theme),\r\n  };\r\n}\r\n\r\nexport function useMuiTheme() {\r\n  const context = React.useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('Missing theme context');\r\n  }\r\n\r\n  const { theme } = context;\r\n  const { isDark } = getProps(theme);\r\n\r\n  return createMuiTheme({\r\n    typography: {\r\n      fontFamily: '\"Rubik\", sans-serif',\r\n    },\r\n    palette: {\r\n      isDark,\r\n      type: isDark ? 'dark' : 'light',\r\n      borderColor: isDark ? '#555' : '#ffa132',\r\n      background: {\r\n        // default: '',\r\n        // paper: '',\r\n      },\r\n      primary: {\r\n        main: isDark ? '#ffffff' : '#373836',\r\n      },\r\n      secondary: {\r\n        main: SECONDARY_COLOR,\r\n      },\r\n    },\r\n    overrides: {\r\n      MuiButton: {\r\n        root: {\r\n          borderRadius: BORDER_RADIUS,\r\n        },\r\n      },\r\n      MuiPaper: {\r\n        rounded: {\r\n          borderRadius: BORDER_RADIUS,\r\n        },\r\n      },\r\n      MuiDialog: {\r\n        paper: {\r\n          borderRadius: BORDER_RADIUS,\r\n        },\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\nfunction getProps(theme) {\r\n  const isDark = theme === 'dark';\r\n  const secondaryColor = isDark ? 'rgb(53, 197, 243)' : '#007cc3';\r\n  return { isDark, secondaryColor };\r\n}\r\n","import React from 'react';\r\nimport { ethers } from 'ethers';\r\nimport {\r\n  NETWORK,\r\n  READ_WEB3_PROVIDER,\r\n  CACHE_WALLET_KEY,\r\n  NETWORK_CHAIN_ID,\r\n} from '../config';\r\nimport cache from '../utils/cache';\r\nimport STAKING_ABI from '../abis/staking.json';\r\nimport LP_ABI from '../abis/lp.json';\r\nimport ERC20_ABI from '../abis/erc20.json';\r\n\r\nexport const READ_PROVIDER = new ethers.providers.JsonRpcProvider(\r\n  READ_WEB3_PROVIDER\r\n);\r\nexport const { stakingAddress: STAKING_ADDRESS } = NETWORK;\r\nexport const READ_STAKING_CONTRACT = new ethers.Contract(\r\n  STAKING_ADDRESS,\r\n  STAKING_ABI,\r\n  READ_PROVIDER\r\n);\r\n\r\nconst WalletContext = React.createContext(null);\r\n\r\nexport function WalletProvider({ children }) {\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  const [isConnecting, setIsConnecting] = React.useState(false);\r\n  const [chainId, setChainId] = React.useState(null);\r\n\r\n  const [lpName] = React.useState('CAKE-LP');\r\n  const [lpAddress, setLpAddress] = React.useState(null);\r\n  const [lpDecimals] = React.useState(18);\r\n\r\n  const [goatAddress, setGoatAddress] = React.useState(null);\r\n  const [goatDecimals] = React.useState(18);\r\n\r\n  const [wrappedBNBDecimals] = React.useState(18);\r\n\r\n  const [signer, setSigner] = React.useState(null);\r\n  const [address, setAddress] = React.useState(null);\r\n\r\n  const isOnWrongNetwork = React.useMemo(\r\n    () => chainId && chainId !== NETWORK_CHAIN_ID,\r\n    [chainId]\r\n  );\r\n\r\n  const stakingContract = React.useMemo(\r\n    () =>\r\n      !signer\r\n        ? READ_STAKING_CONTRACT\r\n        : new ethers.Contract(STAKING_ADDRESS, STAKING_ABI, signer),\r\n    [signer]\r\n  );\r\n\r\n  const lpContract = React.useMemo(\r\n    () =>\r\n      lpAddress &&\r\n      new ethers.Contract(lpAddress, LP_ABI, signer || READ_PROVIDER),\r\n    [signer, lpAddress]\r\n  );\r\n\r\n  const goatContract = React.useMemo(\r\n    () =>\r\n      goatAddress &&\r\n      new ethers.Contract(goatAddress, ERC20_ABI, signer || READ_PROVIDER),\r\n    [signer, goatAddress]\r\n  );\r\n\r\n  const wrappedBNBContract = React.useMemo(\r\n    () =>\r\n      new ethers.Contract(\r\n        '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n        ERC20_ABI,\r\n        signer || READ_PROVIDER\r\n      ),\r\n    [signer]\r\n  );\r\n\r\n  const startConnecting = () => setIsConnecting(true);\r\n  const stopConnecting = () => setIsConnecting(false);\r\n\r\n  async function connectToCached() {\r\n    if (address) return;\r\n\r\n    const cachedWallet = cache(CACHE_WALLET_KEY);\r\n    if (cachedWallet) {\r\n      const c = {\r\n        metamask: connectMetamask,\r\n        bsc: connectBsc,\r\n        trust: connectTrust,\r\n      };\r\n      c[cachedWallet]();\r\n    }\r\n  }\r\n\r\n  async function connectMetamask() {\r\n    await window.ethereum.enable();\r\n    cache(CACHE_WALLET_KEY, 'metamask');\r\n    await setProvider(window.ethereum);\r\n  }\r\n\r\n  async function connectBsc() {\r\n    if (!window.BinanceChain) return;\r\n    await window.BinanceChain.enable();\r\n    cache(CACHE_WALLET_KEY, 'bsc');\r\n    await setProvider(window.BinanceChain);\r\n  }\r\n\r\n  async function connectTrust() {\r\n    await window.ethereum.enable();\r\n    if (!window.ethereum.isTrust) return;\r\n    cache(CACHE_WALLET_KEY, 'trust');\r\n    await setProvider(window.ethereum);\r\n  }\r\n\r\n  async function setProvider(web3Provider) {\r\n    web3Provider.on('accountsChanged', () => {\r\n      window.location.reload();\r\n    });\r\n    web3Provider.on('chainChanged', () => {\r\n      window.location.reload();\r\n    });\r\n    // web3Provider.on('disconnect', () => {\r\n    //   disconnect();\r\n    // });\r\n    const provider = new ethers.providers.Web3Provider(web3Provider);\r\n    let { chainId: c } = await provider.getNetwork();\r\n    // android trust wallet bug\r\n    [56, 97].forEach(o => {\r\n      if (parseInt(`0x${o}`, 16) === parseInt(c)) c = o;\r\n    });\r\n    setChainId(c);\r\n    if (c === NETWORK_CHAIN_ID) {\r\n      const signer = provider.getSigner();\r\n      setSigner(signer);\r\n      setAddress(await signer.getAddress());\r\n      stopConnecting();\r\n    }\r\n  }\r\n\r\n  async function disconnect() {\r\n    cache(CACHE_WALLET_KEY, null);\r\n    setSigner(null);\r\n    setAddress(null);\r\n    setChainId(null);\r\n  }\r\n\r\n  // async function loadLpInfo() {\r\n  //   if (!lpContract) return;\r\n  //   const [decimals, symbol] = await Promise.all([\r\n  //     lpContract.decimals(),\r\n  //     lpContract.symbol(),\r\n  //   ]);\r\n  //   setLpDecimals(decimals);\r\n  //   setLpName(symbol);\r\n  // }\r\n\r\n  async function load() {\r\n    const [lpAddress, goatAddress] = await Promise.all([\r\n      stakingContract.stakingToken,\r\n      stakingContract.rewardsToken,\r\n      connectToCached(),\r\n    ]);\r\n    setLpAddress(lpAddress);\r\n    setGoatAddress(goatAddress);\r\n    setIsLoaded(true);\r\n  }\r\n\r\n  // React.useEffect(() => {\r\n  //   loadLpInfo();\r\n  // }, [lpContract]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  React.useEffect(() => {\r\n    load();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <WalletContext.Provider\r\n      value={{\r\n        isLoaded,\r\n\r\n        chainId,\r\n        signer,\r\n        address,\r\n        isOnWrongNetwork,\r\n\r\n        lpAddress,\r\n        lpContract,\r\n        lpDecimals,\r\n        lpName,\r\n\r\n        goatContract,\r\n        goatAddress,\r\n        goatDecimals,\r\n\r\n        // cakeContract,\r\n        // cakeAddress,\r\n        cakeDecimals: 18,\r\n\r\n        stakingContract,\r\n\r\n        wrappedBNBContract,\r\n        wrappedBNBDecimals,\r\n\r\n        isConnecting,\r\n        startConnecting,\r\n        stopConnecting,\r\n        disconnect,\r\n\r\n        connectMetamask,\r\n        connectBsc,\r\n        connectTrust,\r\n      }}\r\n    >\r\n      {children}\r\n    </WalletContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useWallet() {\r\n  const context = React.useContext(WalletContext);\r\n  if (!context) {\r\n    throw new Error('Missing wallet context');\r\n  }\r\n  const {\r\n    isLoaded,\r\n\r\n    chainId,\r\n    signer,\r\n    address,\r\n    config,\r\n    isOnWrongNetwork,\r\n\r\n    lpAddress,\r\n    lpContract,\r\n    lpDecimals,\r\n    lpName,\r\n\r\n    goatContract,\r\n    goatAddress,\r\n    goatDecimals,\r\n\r\n    cakeContract,\r\n    cakeAddress,\r\n    cakeDecimals,\r\n\r\n    stakingContract,\r\n\r\n    wrappedBNBContract,\r\n    wrappedBNBDecimals,\r\n\r\n    isConnecting,\r\n    startConnecting,\r\n    stopConnecting,\r\n    disconnect,\r\n\r\n    connectMetamask,\r\n    connectBsc,\r\n    connectTrust,\r\n  } = context;\r\n\r\n  return {\r\n    isLoaded,\r\n\r\n    chainId,\r\n    signer,\r\n    address,\r\n    config,\r\n    isOnWrongNetwork,\r\n\r\n    lpAddress,\r\n    lpContract,\r\n    lpDecimals,\r\n    lpName,\r\n\r\n    goatContract,\r\n    goatAddress,\r\n    goatDecimals,\r\n\r\n    cakeContract,\r\n    cakeAddress,\r\n    cakeDecimals,\r\n\r\n    stakingContract,\r\n\r\n    wrappedBNBContract,\r\n    wrappedBNBDecimals,\r\n\r\n    isConnecting,\r\n    startConnecting,\r\n    stopConnecting,\r\n    disconnect,\r\n\r\n    connectMetamask,\r\n    connectBsc,\r\n    connectTrust,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst NotificationsContext = React.createContext(null);\r\n\r\nexport function NotificationsProvider({ children }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const showTxNotification = (description, hash) =>\r\n    enqueueSnackbar(\r\n      { type: 'tx', description, hash },\r\n      {\r\n        persist: true,\r\n      }\r\n    );\r\n\r\n  const showErrorNotification = msg =>\r\n    enqueueSnackbar(\r\n      {\r\n        type: 'error',\r\n        message: msg?.error?.message || msg.responseText || msg.message || msg,\r\n      },\r\n      {\r\n        persist: true,\r\n      }\r\n    );\r\n\r\n  const showSuccessNotification = (title, message) =>\r\n    enqueueSnackbar(\r\n      {\r\n        type: 'success',\r\n        title,\r\n        message,\r\n      },\r\n      {\r\n        persist: true,\r\n      }\r\n    );\r\n\r\n  const tx = async (startNotification, endNotification, makeTx) => {\r\n    try {\r\n      const { hash, wait } = await makeTx();\r\n      showTxNotification(startNotification, hash);\r\n      await wait();\r\n      showSuccessNotification(endNotification, hash);\r\n    } catch (e) {\r\n      showErrorNotification(e);\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <NotificationsContext.Provider\r\n      value={{\r\n        showTxNotification,\r\n        showErrorNotification,\r\n        showSuccessNotification,\r\n        tx,\r\n      }}\r\n    >\r\n      {children}\r\n    </NotificationsContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useNotifications() {\r\n  const context = React.useContext(NotificationsContext);\r\n  if (!context) {\r\n    throw new Error('Missing notifications context');\r\n  }\r\n  const {\r\n    showTxNotification,\r\n    showErrorNotification,\r\n    showSuccessNotification,\r\n    tx,\r\n  } = context;\r\n  return {\r\n    showTxNotification,\r\n    showErrorNotification,\r\n    showSuccessNotification,\r\n    tx,\r\n  };\r\n}\r\n","import BigJs from 'big.js';\r\nimport toformat from 'toformat';\r\n\r\ntoformat(BigJs);\r\n\r\nconst PRECISION = 4;\r\n\r\nexport function toFixed(a, b, precision) {\r\n  if (isZero(Big(a)) || isZero(Big(b))) {\r\n    return '0';\r\n  }\r\n  return Big(a)\r\n    .div(Big(b))\r\n    .toFormat(precision ?? PRECISION);\r\n}\r\n\r\nexport function formatUnits(a, decimals, precision) {\r\n  return toFixed(a, Big(10).pow(decimals), precision);\r\n}\r\n\r\nexport function isZero(a) {\r\n  return Big(a).eq(Big('0'));\r\n}\r\n\r\nexport function Big(n) {\r\n  return new BigJs(n.toString());\r\n}\r\n","import fetch from 'unfetch';\r\nimport qs from 'query-string';\r\nimport { API_URL } from '../config';\r\n\r\nexport async function get(url, query) {\r\n  if (query) {\r\n    url += '?' + qs.stringify(query);\r\n  }\r\n  return await (await fetch(url)).json();\r\n}\r\n\r\nexport async function api(url, query) {\r\n  return get(API_URL + url, query);\r\n}\r\n","import React from 'react';\r\nimport { Big, isZero } from '../utils/big-number';\r\nimport { useWallet } from '../contexts/wallet';\r\nimport * as request from '../utils/request';\r\n\r\nconst GOAT_APY = Big('144');\r\n\r\nconst StatsContext = React.createContext(null);\r\n\r\nconst max = (t, e) => (t.gte(e) ? t : e);\r\nconst min = (t, e) => (t.lte(e) ? t : e);\r\n\r\nexport function StatsProvider({ children }) {\r\n  const {\r\n    stakingContract,\r\n    lpContract,\r\n    wrappedBNBContract,\r\n    goatContract,\r\n    lpAddress,\r\n    lpDecimals,\r\n    wrappedBNBDecimals,\r\n    goatDecimals,\r\n    address,\r\n  } = useWallet();\r\n\r\n  // pool\r\n\r\n  const [totalStaked, setTotalStaked] = React.useState(Big('0'));\r\n  const [totalLockedShares, setTotalLockedShares] = React.useState(Big('0'));\r\n  const [unlockScheduleCount, setUnlockScheduleCount] = React.useState(\r\n    Big('0')\r\n  );\r\n  const [totalStakingShares, setTotalStakingShares] = React.useState(Big('0'));\r\n  const [totalLocked, setTotalLocked] = React.useState(Big('0'));\r\n  const [totalSupply, setTotalSupply] = React.useState(Big('0'));\r\n  const [startBonus, setStartBonus] = React.useState(Big('0'));\r\n  const [bonusPeriodSec, setBonusPeriodSec] = React.useState(Big('0'));\r\n  const [poolBNBBalance, setPoolBNBBalance] = React.useState(Big('0'));\r\n  const [poolGoatBalance, setPoolGoatBalance] = React.useState(Big('0'));\r\n  const [schedules, setUnlockSchedules] = React.useState([]);\r\n  const [bnbUSDPrice, setBNBUSDPrice] = React.useState(Big('0'));\r\n  const [goatUSDPrice, setGoatUSDPrice] = React.useState(Big('0'));\r\n\r\n  // user\r\n\r\n  const [availableGoatRewards, setAvailableGoatRewards] = React.useState(\r\n    Big('0')\r\n  );\r\n  const [availableCakeRewards, setAvailableCakeRewards] = React.useState(\r\n    Big('0')\r\n  );\r\n  const [totalStakedFor, setTotalStakedFor] = React.useState(Big('0'));\r\n  const [\r\n    totalStakingShareSeconds,\r\n    setTotalStakingShareSeconds,\r\n  ] = React.useState(Big('0'));\r\n  const [userStakingShareSeconds, setUserStakingShareSeconds] = React.useState(\r\n    Big('0')\r\n  );\r\n  const [totalUserRewards, setTotalUserRewards] = React.useState(Big('0'));\r\n\r\n  const totalUSDDeposits = React.useMemo(() => {\r\n    if (\r\n      !(\r\n        !isZero(totalStaked) &&\r\n        !isZero(totalSupply) &&\r\n        !isZero(poolBNBBalance) &&\r\n        !isZero(poolGoatBalance) &&\r\n        !isZero(bnbUSDPrice) &&\r\n        !isZero(goatUSDPrice) &&\r\n        goatDecimals &&\r\n        lpDecimals &&\r\n        wrappedBNBDecimals\r\n      )\r\n    )\r\n      return Big('0');\r\n\r\n    const k = bnbUSDPrice;\r\n    const A = goatUSDPrice;\r\n\r\n    // const l = 18;\r\n    const c = lpDecimals; // lp\r\n    const p = wrappedBNBDecimals; // bnb\r\n    const m = goatDecimals; // goat\r\n\r\n    // const g = parseInt(v[0][0]) / 10 ** l;\r\n    // const y = parseInt(v[0][1]) / 10 ** l;\r\n    // const b = parseInt(v[0][5]);\r\n    const w = Big(totalStaked).div(10 ** c);\r\n    // const _ = parseInt(totalLockedShares);\r\n    // const x = parseInt(unlockScheduleCount);\r\n    // const S = parseInt(v[5]) / 10 ** l;\r\n    const E = Big(totalSupply).div(10 ** c);\r\n    // const M = yield up(h)\r\n    // const k = yield up(f)\r\n    // const A = yield up(d)\r\n    const T = Big(poolBNBBalance).div(10 ** p);\r\n    const C = Big(poolGoatBalance).div(10 ** m);\r\n\r\n    const O = k.mul(T);\r\n    const P = A.mul(C);\r\n\r\n    const I = w.div(E);\r\n    const N = O.add(P).mul(I);\r\n\r\n    // console.log(\r\n    //   Object.entries({ N, O, P, I, k, T, A, C, w, E }).reduce((r, [k, v]) => {\r\n    //     r[k] = v.toString();\r\n    //     return r;\r\n    //   }, {})\r\n    // );\r\n\r\n    return N;\r\n  }, [\r\n    totalStaked,\r\n    totalSupply,\r\n    poolBNBBalance,\r\n    poolGoatBalance,\r\n    bnbUSDPrice,\r\n    goatUSDPrice,\r\n    goatDecimals,\r\n    lpDecimals,\r\n    wrappedBNBDecimals,\r\n  ]);\r\n\r\n  const stakingEndSec = React.useMemo(\r\n    () =>\r\n      !schedules.length ? Big('0') : schedules[schedules.length - 1].endAtSec,\r\n    [schedules]\r\n  );\r\n\r\n  const hourlyUnlockRate = React.useMemo(() => {\r\n    if (!(!isZero(totalLockedShares) && !isZero(totalLocked) && schedules))\r\n      return Big('0');\r\n\r\n    // const totalLockedSharesNormalized = totalLockedShares.div(1e18);\r\n\r\n    const m = parseInt(Date.now() / 1e3);\r\n    const i = Big(3600);\r\n\r\n    const scheduleSharesEmittedPerHour = schedules.reduce((t, schedule) => {\r\n      return t.add(\r\n        min(max(schedule.endAtSec.sub(m), Big('0')), i)\r\n          .div(schedule.durationSec)\r\n          .mul(schedule.initialLockedShares)\r\n      );\r\n    }, Big('0'));\r\n\r\n    return isZero(totalLocked)\r\n      ? Big('0')\r\n      : scheduleSharesEmittedPerHour\r\n          .div(totalLockedShares)\r\n          .mul(totalLocked)\r\n          .div(1e9);\r\n  }, [totalLockedShares, totalLocked, schedules]);\r\n\r\n  const apy = React.useMemo(() => {\r\n    if (!(!isZero(hourlyUnlockRate) && !isZero(totalUSDDeposits)))\r\n      return Big('0');\r\n\r\n    let BNB_APY = bnbUSDPrice\r\n      .mul(250)\r\n      .div(totalUSDDeposits)\r\n      .mul(1300);\r\n\r\n    let apy = hourlyUnlockRate\r\n      .div(totalUSDDeposits)\r\n      .mul(8760)\r\n      .mul(100)\r\n      .add(GOAT_APY)\r\n      .add(BNB_APY);\r\n\r\n    if (apy.gte(1e6)) {\r\n      apy = Big(1e6);\r\n    }\r\n\r\n    return apy;\r\n  }, [hourlyUnlockRate, totalUSDDeposits, bnbUSDPrice]);\r\n\r\n  const rewardMultiplier = React.useMemo(() => {\r\n    if (!!isZero(startBonus)) return Big('1');\r\n    const maxMultiplier = Big('1').div(startBonus);\r\n    const minMultiplier = 1;\r\n    const e = {\r\n      startBonus,\r\n      maxMultiplier,\r\n      minMultiplier,\r\n    };\r\n    const p = availableGoatRewards;\r\n    const m = totalUserRewards;\r\n    let w = e.startBonus;\r\n    const z = isZero(totalUserRewards) ? Big('1') : p.div(m);\r\n    if (m.gt(Big('0'))) {\r\n      w = max(w, z);\r\n    }\r\n    const _ = w.sub(e.startBonus).div(Big(1).sub(e.startBonus));\r\n    const S = _.mul(e.maxMultiplier.sub(e.minMultiplier)).add(e.minMultiplier);\r\n    // console.log(\r\n    //   Object.entries({\r\n    //     p,\r\n    //     m,\r\n    //     w,\r\n    //     _,\r\n    //     S,\r\n    //     startBonus,\r\n    //     maxMultiplier,\r\n    //     minMultiplier,\r\n    //     a: w.sub(e.startBonus),\r\n    //     b: Big(1).sub(e.startBonus),\r\n    //     z,\r\n    //   }).reduce((r, [k, v]) => {\r\n    //     r[k] = v.toString();\r\n    //     return r;\r\n    //   }, {})\r\n    // );\r\n    return S;\r\n  }, [startBonus, totalUserRewards, availableGoatRewards]);\r\n\r\n  const bnbPonusPoolSharePercentage = React.useMemo(() => {\r\n    if (isZero(totalStakingShareSeconds)) return Big('0');\r\n    return userStakingShareSeconds.div(totalStakingShareSeconds);\r\n  }, [userStakingShareSeconds, totalStakingShareSeconds]);\r\n\r\n  const bnbPonusPoolShareAmount = React.useMemo(() => {\r\n    const poolAmount = Big('250').mul(10 ** wrappedBNBDecimals); // total amount of BNB paid out\r\n    return poolAmount.mul(bnbPonusPoolSharePercentage);\r\n  }, [bnbPonusPoolSharePercentage, wrappedBNBDecimals]);\r\n\r\n  const loadPoolStats = async () => {\r\n    if (\r\n      !(\r\n        stakingContract &&\r\n        lpContract &&\r\n        wrappedBNBContract &&\r\n        goatContract &&\r\n        lpAddress\r\n      )\r\n    )\r\n      return;\r\n    const [\r\n      totalSupply,\r\n      poolBNBBalance,\r\n      poolGoatBalance,\r\n      [bnbUSDPrice, goatUSDPrice],\r\n    ] = await Promise.all([\r\n      lpContract.totalSupply(),\r\n      wrappedBNBContract.balanceOf(lpAddress),\r\n      goatContract.balanceOf(lpAddress),\r\n      getCoinUsdPrices(['wbnb', 'goat']),\r\n    ]);\r\n\r\n\r\n    setTotalSupply(Big(totalSupply));\r\n    setPoolBNBBalance(Big(poolBNBBalance));\r\n    setPoolGoatBalance(Big(poolGoatBalance));\r\n    setBNBUSDPrice(Big(bnbUSDPrice));\r\n    setGoatUSDPrice(Big(goatUSDPrice));\r\n  };\r\n\r\n  const loadUserStats = async () => {\r\n    if (!(stakingContract && address)) return;\r\n    const [\r\n      // availableCakeRewards,\r\n      totalStakedFor,\r\n      // [, , userStakingShareSeconds, totalStakingShareSeconds, totalUserRewards],\r\n    ] = await Promise.all([\r\n      // stakingContract.pendingCakeByUser(address),\r\n      stakingContract.earned(address)\r\n      // stakingContract.callStatic.updateAccounting(),\r\n    ]);\r\n    const availableGoatRewards = 0\r\n    // setAvailableCakeRewards(Big(availableCakeRewards));\r\n    setTotalStakedFor(Big(totalStakedFor));\r\n    setAvailableGoatRewards(Big(availableGoatRewards));\r\n    setTotalStakingShareSeconds(Big(totalStakingShareSeconds));\r\n    setUserStakingShareSeconds(Big(userStakingShareSeconds));\r\n    setTotalUserRewards(Big(totalUserRewards));\r\n  };\r\n\r\n  \r\n  // const [earnedReward, setEarnedReward] = React.useState(0);\r\n  // const [isLoaded, setIsLoaded] = React.useState(false);\r\n\r\n  // const subscribeToPoolStats = () => {\r\n  //   if (!stakingContract) return;\r\n  //   const stakedEvent = stakingContract.filters.Stake();\r\n  //   const unstakedEvent = stakingContract.filters.Withdrawn();\r\n  //   stakingContract.on(stakedEvent, loadPoolStats);\r\n  //   stakingContract.on(unstakedEvent, loadPoolStats);\r\n  //   return () => {\r\n  //     stakingContract.off(stakedEvent, loadPoolStats);\r\n  //     stakingContract.off(unstakedEvent, loadPoolStats);\r\n  //   };\r\n  // };\r\n\r\n  // const subscribeToUserStats = () => {\r\n  //   if (!(stakingContract && address)) return;\r\n  //   const stakedEvent = stakingContract.filters.Stake();\r\n  //   const unstakedEvent = stakingContract.filters.Withdrawn();\r\n  //   stakingContract.on(stakedEvent, loadUserStats);\r\n  //   stakingContract.on(unstakedEvent, loadUserStats);\r\n  //   const cid = setInterval(loadUserStats, 1000 * 30);\r\n  //   return () => {\r\n  //     stakingContract.off(stakedEvent, loadUserStats);\r\n  //     stakingContract.off(unstakedEvent, loadUserStats);\r\n  //     clearInterval(cid);\r\n  //   }; \r\n  // };\r\n\r\n  React.useEffect(() => {\r\n    loadPoolStats();\r\n    // return subscribeToPoolStats(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    stakingContract,\r\n    lpContract,\r\n    wrappedBNBContract,\r\n    goatContract,\r\n    lpAddress,\r\n    lpDecimals,\r\n    wrappedBNBDecimals,\r\n    goatDecimals,\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    loadUserStats();\r\n    // return subscribeToUserStats(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [stakingContract, address]);\r\n\r\n  return (\r\n    <StatsContext.Provider\r\n      value={{\r\n        totalStaked,\r\n        totalLockedShares,\r\n        unlockScheduleCount,\r\n        totalStakingShares,\r\n        totalLocked,\r\n        totalSupply,\r\n        startBonus,\r\n        bonusPeriodSec,\r\n        poolBNBBalance,\r\n        poolGoatBalance,\r\n        bnbUSDPrice,\r\n        goatUSDPrice,\r\n        schedules,\r\n\r\n        availableGoatRewards,\r\n        availableCakeRewards,\r\n        totalStakedFor,\r\n        totalStakingShareSeconds,\r\n        userStakingShareSeconds,\r\n\r\n        apy,\r\n        hourlyUnlockRate,\r\n        totalUSDDeposits,\r\n        stakingEndSec,\r\n        rewardMultiplier,\r\n        bnbPonusPoolSharePercentage,\r\n        bnbPonusPoolShareAmount,\r\n\r\n        // earnedReward,\r\n        // isLoaded\r\n      }}\r\n    >\r\n      {children}\r\n    </StatsContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useStats() {\r\n  const context = React.useContext(StatsContext);\r\n  if (!context) {\r\n    throw new Error('Missing stats context');\r\n  }\r\n  const {\r\n    totalStaked,\r\n    totalLockedShares,\r\n    unlockScheduleCount,\r\n    totalStakingShares,\r\n    totalLocked,\r\n    totalSupply,\r\n    startBonus,\r\n    bonusPeriodSec,\r\n    poolBNBBalance,\r\n    poolGoatBalance,\r\n    schedules,\r\n    bnbUSDPrice,\r\n    goatUSDPrice,\r\n\r\n    availableGoatRewards,\r\n    availableCakeRewards,\r\n    totalStakedFor,\r\n    totalStakingShareSeconds,\r\n    userStakingShareSeconds,\r\n\r\n    apy,\r\n    hourlyUnlockRate,\r\n    totalUSDDeposits,\r\n    stakingEndSec,\r\n    rewardMultiplier,\r\n    bnbPonusPoolSharePercentage,\r\n    bnbPonusPoolShareAmount,\r\n  } = context;\r\n\r\n  return {\r\n    totalStaked,\r\n    totalLockedShares,\r\n    unlockScheduleCount,\r\n    totalStakingShares,\r\n    totalLocked,\r\n    totalSupply,\r\n    startBonus,\r\n    bonusPeriodSec,\r\n    poolBNBBalance,\r\n    poolGoatBalance,\r\n    schedules,\r\n    bnbUSDPrice,\r\n    goatUSDPrice,\r\n\r\n    availableGoatRewards,\r\n    availableCakeRewards,\r\n    totalStakedFor,\r\n    totalStakingShareSeconds,\r\n    userStakingShareSeconds,\r\n\r\n    apy,\r\n    hourlyUnlockRate,\r\n    totalUSDDeposits,\r\n    stakingEndSec,\r\n    rewardMultiplier,\r\n    bnbPonusPoolSharePercentage,\r\n    bnbPonusPoolShareAmount,\r\n  };\r\n}\r\n\r\nasync function getCoinUsdPrices(assetsCoinGeckoIds) {\r\n  const prices = await request.get(\r\n    'https://api.coingecko.com/api/v3/simple/price',\r\n    {\r\n      ids: assetsCoinGeckoIds.join(','),\r\n      vs_currencies: 'usd',\r\n    }\r\n  );\r\n  return assetsCoinGeckoIds.map(id => Big((prices[id] || { usd: 0 }).usd));\r\n}\r\n","import React from 'react';\r\nimport * as ethers from 'ethers';\r\nimport { useWallet } from '../contexts/wallet';\r\nimport * as request from '../utils/request';\r\nimport DROP_ABI from '../abis/merkle.json';\r\nimport { NETWORK } from '../config';\r\n\r\nconst BonusesContext = React.createContext(null);\r\n\r\nexport function BonusesProvider({ children }) {\r\n  const { signer, address } = useWallet();\r\n\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  const [drops, setDrops] = React.useState([]);\r\n\r\n  const hasPendingBonusClaim = React.useMemo(\r\n    () => !!drops.filter(d => d.hasPendingClaim).length,\r\n    [drops]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (!(signer && address)) return setDrops([]);\r\n\r\n    let isMounted = true;\r\n    const unsubs = [() => (isMounted = false)];\r\n    const dropsConfig = Array.from(NETWORK.drops.entries()).map(\r\n      ([contractAddress, date]) => ({\r\n        date,\r\n        contract: new ethers.Contract(contractAddress, DROP_ABI, signer),\r\n      })\r\n    );\r\n\r\n    const loadDrops = async () => {\r\n      const ds = await Promise.all(dropsConfig.map(loadDrop));\r\n\r\n      if (isMounted) {\r\n        setDrops(ds);\r\n        setIsLoaded(true);\r\n      }\r\n    };\r\n\r\n    const loadDrop = async ({ contract, date }) => {\r\n      const claimInfo = await request.api(`/claim-info/${date}/${address}`);\r\n      let didClaim = false;\r\n\r\n      const canClaim = 'index' in claimInfo;\r\n      if (canClaim) {\r\n        didClaim = await contract.isClaimed(claimInfo.index);\r\n      }\r\n\r\n      return {\r\n        address,\r\n        date,\r\n        contract,\r\n        claimInfo,\r\n        canClaim,\r\n        didClaim,\r\n        hasPendingClaim: canClaim && !didClaim,\r\n      };\r\n    };\r\n\r\n    const subscribe = () => {\r\n      dropsConfig.forEach(({ contract }) => {\r\n        // const claimEvent = contract.filters.Claimed(null, address);\r\n        const claimEvent = contract.filters.Claimed();\r\n        contract.on(claimEvent, loadDrops);\r\n        unsubs.push(() => contract.off(claimEvent, loadDrops));\r\n      });\r\n    };\r\n\r\n    loadDrops();\r\n    subscribe();\r\n    return () => {\r\n      unsubs.forEach(unsub => unsub());\r\n    };\r\n  }, [signer, address]);\r\n\r\n  return (\r\n    <BonusesContext.Provider\r\n      value={{\r\n        isLoaded,\r\n        drops,\r\n        hasPendingBonusClaim,\r\n      }}\r\n    >\r\n      {children}\r\n    </BonusesContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useBonuses() {\r\n  const context = React.useContext(BonusesContext);\r\n  if (!context) {\r\n    throw new Error('Missing bonuses context');\r\n  }\r\n  const { isLoaded, drops, hasPendingBonusClaim } = context;\r\n\r\n  return {\r\n    isLoaded,\r\n    drops,\r\n    hasPendingBonusClaim,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper } from '@material-ui/core';\r\nimport {\r\n  ArrowUpward as TxIcon,\r\n  Done as SuccessIcon,\r\n  Clear as ErrorIcon,\r\n  Close as CloseIcon,\r\n} from '@material-ui/icons';\r\nimport { useSnackbar } from 'notistack';\r\nimport { IS_TESTNET } from '../config';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    color: 'white',\r\n  },\r\n  container: {\r\n    padding: '10px 20px 10px 10px',\r\n    '& a': {\r\n      color: 'white',\r\n      display: 'block',\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  icon: {\r\n    // border: '1px solid',\r\n    // borderRadius: '50%',\r\n    // padding: 10,\r\n    marginRight: 10,\r\n    display: 'inline-flex',\r\n  },\r\n  close: {\r\n    position: 'absolute',\r\n    top: 5,\r\n    right: 5,\r\n    cursor: 'pointer',\r\n  },\r\n  tx: {\r\n    background: '#2196f3',\r\n  },\r\n  error: {\r\n    background: '#d32f2f',\r\n  },\r\n  success: {\r\n    background: '#43a047',\r\n  },\r\n  small: {\r\n    fontSize: 12,\r\n  },\r\n}));\r\n\r\nconst TYPES = new Map([\r\n  ['tx', [TxIcon, TxContent]],\r\n  ['error', [ErrorIcon, ErrorContent]],\r\n  ['success', [SuccessIcon, SuccessContent]],\r\n]);\r\n\r\nexport default function({ id, notification }) {\r\n  const classes = useStyles();\r\n  const { closeSnackbar } = useSnackbar();\r\n  const clearNotification = () => closeSnackbar(id);\r\n\r\n  const [\r\n    ,\r\n    // Icon\r\n    Content,\r\n  ] = TYPES.get(notification.type);\r\n\r\n  return (\r\n    <Paper className={clsx(classes.paper, classes[notification.type])}>\r\n      <div className={classes.close} onClick={clearNotification}>\r\n        <CloseIcon style={{ fontSize: 15 }} />\r\n      </div>\r\n      <div\r\n        className={clsx('flex', 'flex-grow', 'items-center', classes.container)}\r\n      >\r\n        <div\r\n          className={clsx('flex', 'flex-grow', 'flex-col', 'justify-center')}\r\n        >\r\n          <Content {...{ notification }} />\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nfunction TxContent({ notification }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <strong className={classes.small}>{notification.description}</strong>\r\n\r\n      <a\r\n        href={`https://${IS_TESTNET ? 'testnet.' : ''}bscscan.com/tx/${\r\n          notification.hash\r\n        }`}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className={classes.small}\r\n      >\r\n        View on BSCScan\r\n      </a>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ErrorContent({ notification }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <strong className={clsx(classes.small, classes.error)}>\r\n        {notification.message}\r\n      </strong>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction SuccessContent({ notification }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div>{notification.title}</div>\r\n      <strong className={clsx(classes.small, classes.success)}>\r\n        {notification.message}\r\n      </strong>\r\n    </>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  IconButton,\r\n  Tooltip,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport LightIcon from '@material-ui/icons/Brightness1';\r\nimport DarkIcon from '@material-ui/icons/Brightness2';\r\nimport { useTheme } from '../contexts/theme';\r\nimport { useWallet } from '../contexts/wallet';\r\nimport { APP_TITLE } from '../config';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    boxShadow: 'none',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n  },\r\n  account: {\r\n    marginRight: 10,\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Component() {\r\n  const classes = useStyles();\r\n  const { address, startConnecting, disconnect } = useWallet();\r\n  const { isDark, toggleTheme } = useTheme();\r\n\r\n  const shortAddress =\r\n    address && `${address.slice(0, 6)}....${address.slice(-4)}`;\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"inherit\" className={classes.container}>\r\n      <Toolbar color=\"inherit\">\r\n        <Typography variant=\"h6\" className={'flex flex-grow'}>\r\n          <div className={'flex items-center'} href=\"/\">\r\n            {APP_TITLE}\r\n          </div>\r\n        </Typography>\r\n\r\n        {address ? (\r\n          <>\r\n            &nbsp;\r\n            <div className={classes.account}>{shortAddress}</div>\r\n            <Button color=\"secondary\" onClick={disconnect}>\r\n              Disconnect\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <Button color=\"secondary\" onClick={startConnecting}>\r\n            Connect Wallet\r\n          </Button>\r\n        )}\r\n\r\n        <Tooltip title=\"Toggle light/dark theme\">\r\n          <IconButton\r\n            onClick={toggleTheme}\r\n            color=\"inherit\"\r\n            aria-label=\"Toggle light/dark theme\"\r\n          >\r\n            {isDark ? <LightIcon /> : <DarkIcon />}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Paper } from '@material-ui/core';\r\nimport { useTheme } from '../contexts/theme';\r\n\r\nexport default ({ className, children }) => {\r\n  const { isDark } = useTheme();\r\n  return (\r\n    <Paper\r\n      {...{ className }}\r\n      {...(isDark ? {} : { variant: 'outlined' })}\r\n      elevation={0}\r\n    >\r\n      {children}\r\n    </Paper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Tooltip } from '@material-ui/core';\r\nimport { Help as TipIcon } from '@material-ui/icons';\r\nimport { formatUnits, toFixed, isZero, Big } from '../utils/big-number';\r\nimport Paper from '../components/Paper';\r\nimport { useWallet } from '../contexts/wallet';\r\nimport { useStats } from '../contexts/stats';\r\nimport { useNotifications } from '../contexts/notifications';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    paddingTop: 14,\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 1fr 1fr 1fr',\r\n    columnGap: '10px',\r\n  },\r\n  box: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    flexDirection: 'column',\r\n    padding: 20,\r\n    background: theme.palette.isDark ? '#555' : '#fff',\r\n    color: theme.palette.isDark ? 'white' : '#373836',\r\n    position: 'relative',\r\n  },\r\n  boxTip: {\r\n    position: 'absolute',\r\n    top: 5,\r\n    right: 5,\r\n  },\r\n  boxTitle: {\r\n    fontSize: 11,\r\n  },\r\n  small: {\r\n    fontSize: 10,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n\r\n\r\nexport default function() {\r\n  const classes = useStyles();\r\n  const { goatDecimals, wrappedBNBDecimals, stakingContract, address, lpContract } = useWallet();\r\n  const {\r\n    apy,\r\n    availableGoatRewards,\r\n    rewardMultiplier,\r\n    bnbPonusPoolSharePercentage,\r\n    bnbPonusPoolShareAmount,\r\n    stakingEndSec,\r\n  } = useStats();\r\n  const [earnedReward, setEarnedReward] = React.useState(0);\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n\r\n\r\n  const getEarned = async () => {\r\n    try {\r\n      const earnedReward = await stakingContract.earned(address);\r\n      // const totalSupply = await stakingContract.totalSupply();\r\n      return formatUnits(earnedReward, goatDecimals, 12);\r\n    } catch (e) {\r\n      return 0;\r\n      // getEarned();\r\n      // useNotifications.showErrorNotification(e);\r\n    }\r\n  };\r\n\r\n    \r\n\r\n  const getReward = async () => {\r\n    // if (!(lpContract && address)) return;\r\n    try {\r\n      \r\n      // if (depositAmount.isZero())\r\n      //   return showErrorNotification('Enter deposit amount.');\r\n      // if (!depositMaxAmount && depositAmount.gt(maxDepositAmount)) {\r\n      //   return showErrorNotification(\r\n      //     'You are trying to deposit more than your actual balance.'\r\n      //   );\r\n      // }\r\n      // setIsDepositing(true);\r\n      // const rewardRate1 = await stakingContract.rewardRate;\r\n      // console.log(address);\r\n      \r\n      // console.log(rewardRate1)\r\n      \r\n      const tx = await stakingContract.getReward();\r\n      \r\n      // showTxNotification(`Depositing ${lpName}`, tx.hash);\r\n      await tx.wait();\r\n      // showTxNotification(`Deposited ${lpName}`, tx.hash);\r\n      // onSetDepositMaxAmount();\r\n    } catch (e) {\r\n      // useNotifications.showErrorNotification(e);\r\n    }\r\n  };\r\n\r\n  const stats = React.useMemo(\r\n    () => [\r\n      // {\r\n      //   name: 'APR',\r\n      //   value: [`${toFixed(apy, 1, 2)}%`],\r\n      //   tip: 'APR is estimated for a new deposit over the next reward duration.',\r\n      // },\r\n      {\r\n        name: 'Rewards Earned',\r\n        value: [\r\n          <div className=\"flex items-start flex-wrap\">\r\n            {isLoaded ? `${earnedReward} GOAT` : 'calculating'}\r\n            <Box ml={1} className=\"flex items-center\">\r\n              <img src=\"coins/GOAT.png\" alt=\"GOAT\" width={15} height={15} />\r\n            </Box>\r\n\r\n              <Button\r\n                  color=\"default\"\r\n                  variant=\"outlined\"\r\n                  onClick={getReward}\r\n                  // disabled={!(lpContract && address)}\r\n              >\r\n                Claim Rewards\r\n              </Button>\r\n              \r\n          </div>\r\n        ],\r\n        tip:\r\n          'Amount of GOAT rewards you will receive on claiming.',\r\n      },\r\n    ],\r\n    // [\r\n    //   apy,\r\n    //   availableGoatRewards,\r\n    //   goatDecimals,\r\n    //   wrappedBNBDecimals,\r\n    //   rewardMultiplier,\r\n    //   bnbPonusPoolShareAmount,\r\n    //   bnbPonusPoolSharePercentage,\r\n    //   stakingEndSec,\r\n    //   classes.small,\r\n    //   classes.link,\r\n    // ]\r\n  );\r\n\r\n  if (!isLoaded && address) {\r\n    // console.log(address);\r\n    getEarned().then(response => {\r\n      setEarnedReward(response);\r\n      setIsLoaded(true);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Box className={clsx(classes.container)}>\r\n      {stats.map(s => (\r\n        <StatBox key={s.name} {...s} />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction StatBox({ name, value, tip }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={clsx(classes.box)}>\r\n      <Tooltip title={tip}>\r\n        <TipIcon style={{ fontSize: 15 }} className={classes.boxTip} />\r\n      </Tooltip>\r\n      <div className={clsx(classes.boxTitle)}>{name}</div>\r\n      <div>\r\n        {value.map((v, i) => (\r\n          <div key={i}>{v}</div>\r\n        ))}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { BORDER_RADIUS } from '../config';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    marginTop: 10,\r\n    backgroundColor: theme.palette.isDark ? '#222' : '#eee',\r\n    zIndex: 1,\r\n    borderTopLeftRadius: BORDER_RADIUS,\r\n    borderTopRightRadius: BORDER_RADIUS,\r\n  },\r\n  containerInner: {\r\n    paddingTop: 14,\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    color: theme.palette.isDark ? 'white' : '#373836',\r\n    borderBottom: `5px solid ${theme.palette.isDark ? '#555' : '#ddd'}`,\r\n    textDecoration: 'none',\r\n    padding: '5px 0 15px',\r\n    cursor: 'pointer',\r\n  },\r\n  active: {\r\n    borderBottomColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default withRouter(function() {\r\n  const classes = useStyles();\r\n  const path = window.location.hash;\r\n  const isDeposit = ~path.indexOf('deposit');\r\n  const isWithdraw = ~path.indexOf('withdraw');\r\n  const isStats = ~path.indexOf('stats');\r\n\r\n  return (\r\n    <div className={clsx('flex flex-col flex-grow', classes.container)}>\r\n      <div className={clsx('flex flex-grow', classes.containerInner)}>\r\n        <Link\r\n          to=\"/deposit\"\r\n          className={clsx(classes.link, {\r\n            [classes.active]: isDeposit,\r\n          })}\r\n        >\r\n          Deposit\r\n        </Link>\r\n        <Link\r\n          to=\"/withdraw\"\r\n          className={clsx(classes.link, {\r\n            [classes.active]: isWithdraw,\r\n          })}\r\n        >\r\n          Withdraw\r\n        </Link>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport * as ethers from 'ethers';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Paper, Button, TextField } from '@material-ui/core';\r\nimport { useWallet } from '../contexts/wallet';\r\nimport { useNotifications } from '../contexts/notifications';\r\nimport { formatUnits } from '../utils/big-number';\r\nimport { BORDER_RADIUS, EMPTY_CALL_DATA } from '../config';\r\nimport { useStats } from '../contexts/stats';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  container: {\r\n    '& a': {\r\n      color: theme.palette.secondary.main,\r\n    },\r\n    '& .MuiInputLabel-shrink': {\r\n      right: 0,\r\n      transform: 'translate(0, 1.5px) scale(1)',\r\n      transformOrigin: 'top left',\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  maxButton: {\r\n    height: 35,\r\n  },\r\n  withdrawButton: {\r\n    width: 200,\r\n  },\r\n  rewards: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexGrow: 1,\r\n    padding: 20,\r\n    borderRadius: BORDER_RADIUS,\r\n    background: theme.palette.isDark ? '#555' : '#fff',\r\n    color: theme.palette.isDark ? 'white' : '#373836',\r\n  },\r\n  stats: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 1fr',\r\n    columnGap: '10px',\r\n  },\r\n}));\r\n\r\nexport default function() {\r\n  const classes = useStyles();\r\n\r\n  const [earnedReward, setEarnedReward] = React.useState(0);\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n\r\n  const getEarned = async () => {\r\n    try {\r\n      const earnedReward = await stakingContract.earned(address);\r\n      // const totalSupply = await stakingContract.totalSupply();\r\n      return formatUnits(earnedReward, goatDecimals, 12);\r\n    } catch (e) {\r\n      return 0;\r\n      // useNotifications.showErrorNotification(e);\r\n    }\r\n  };\r\n\r\n  const {\r\n    startConnecting: startConnectingWallet,\r\n    signer,\r\n    address,\r\n    stakingContract,\r\n    lpContract,\r\n    lpDecimals,\r\n    goatDecimals,\r\n    lpName,\r\n  } = useWallet();\r\n  const { availableGoatRewards, availableCakeRewards } = useStats();\r\n\r\n  const [isWithdrawing, setIsWithdrawing] = React.useState(false);\r\n\r\n  const [totalStakedFor, setTotalStakedFor] = React.useState(\r\n    ethers.BigNumber.from('0')\r\n  );\r\n\r\n  const { showTxNotification, showErrorNotification } = useNotifications();\r\n  const [inputAmount, setInputAmount] = React.useState(0);\r\n  const [withdrawMaxAmount, setWithdrawMaxAmount] = React.useState(false);\r\n  const [maxWithdrawAmount, setMaxWithdrawAmount] = React.useState(\r\n    ethers.BigNumber.from('0')\r\n  );\r\n  const withdrawAmount = React.useMemo(() => {\r\n    let inputAmountBN;\r\n    try {\r\n      inputAmountBN = ethers.utils.parseUnits(\r\n        inputAmount.toString(),\r\n        lpDecimals\r\n      );\r\n    } catch (e) {\r\n      inputAmountBN = ethers.BigNumber.from('0');\r\n    }\r\n    return withdrawMaxAmount ? maxWithdrawAmount : inputAmountBN;\r\n  }, [inputAmount, maxWithdrawAmount, withdrawMaxAmount, lpDecimals]);\r\n\r\n  const onConnectOrWithdraw = async () => {\r\n    !signer ? startConnectingWallet() : withdraw();\r\n  };\r\n\r\n  const withdraw = async () => {\r\n    try {\r\n      if (withdrawAmount.isZero())\r\n        return showErrorNotification('Enter withdrawal amount.');\r\n      if (!withdrawMaxAmount && withdrawAmount.gt(maxWithdrawAmount)) {\r\n        return showErrorNotification(\r\n          'You are trying to withdraw more than you deposited.'\r\n        );\r\n      }\r\n      setIsWithdrawing(true);\r\n      const tx = await stakingContract.exit();\r\n      showTxNotification(`Withdrawing ${lpName}`, tx.hash);\r\n      await tx.wait();\r\n      showTxNotification(`Withdrew ${lpName}`, tx.hash);\r\n      await onSetWithdrawMaxAmount();\r\n    } catch (e) {\r\n      showErrorNotification(e);\r\n    } finally {\r\n      setIsWithdrawing(false);\r\n    }\r\n  };\r\n\r\n  const onSetWithdrawAmount = e => {\r\n    setWithdrawMaxAmount(false);\r\n    setInputAmount(e.target.value);\r\n  };\r\n\r\n  const onSetWithdrawMaxAmount = async () => {\r\n    if (!(stakingContract && address)) return;\r\n    const totalStakedFor = await stakingContract.balanceOf(address);\r\n    setTotalStakedFor(totalStakedFor);\r\n    setInputAmount(formatUnits(totalStakedFor, 18, 18));\r\n    setWithdrawMaxAmount(true);\r\n    setMaxWithdrawAmount(totalStakedFor);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    onSetWithdrawMaxAmount();\r\n  }, [stakingContract, address]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  if (!isLoaded && address) {\r\n    // console.log(address);\r\n    getEarned().then(response => {\r\n      setEarnedReward(response);\r\n      setIsLoaded(true);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {!lpName ? null : (\r\n        <div className={'flex'}>\r\n          <TextField\r\n            id=\"amount\"\r\n            value={inputAmount}\r\n            label={\r\n              <div className=\"flex flex-grow justify-space\">\r\n                <div className=\"flex-grow\">Withdraw Amount ({lpName})</div>\r\n                <div>\r\n                  Deposited: {formatUnits(totalStakedFor, 18)} {lpName}\r\n                </div>\r\n              </div>\r\n            }\r\n            type=\"number\"\r\n            step=\"any\"\r\n            className={classes.input}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            fullWidth\r\n            onChange={onSetWithdrawAmount}\r\n          />\r\n\r\n          <Box className=\"flex items-end\" pl={2}>\r\n            <Button\r\n              color=\"default\"\r\n              variant=\"outlined\"\r\n              onClick={onSetWithdrawMaxAmount}\r\n              disabled={!(lpContract && address)}\r\n              className={classes.maxButton}\r\n            >\r\n              MAX\r\n            </Button>\r\n          </Box>\r\n        </div>\r\n      )}\r\n\r\n      <Box mt={2} className={classes.stats}>\r\n        <Paper className={clsx(classes.rewards)}>\r\n          <div>Amount to Withdraw:</div>\r\n          <div>\r\n            ≈ {formatUnits(totalStakedFor, lpDecimals)} {lpName}\r\n          </div>\r\n        </Paper>\r\n\r\n        <Paper className={clsx(classes.rewards)}>\r\n          <div>Rewards Earned:</div>\r\n          <div>{isLoaded ? `${earnedReward} GOAT` : 'calculating'}</div>\r\n        </Paper>\r\n      </Box>\r\n\r\n      <Box mt={2}>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          disabled={isWithdrawing}\r\n          onClick={onConnectOrWithdraw}\r\n          className={classes.withdrawButton}\r\n        >\r\n          {isWithdrawing\r\n            ? 'Withdrawing...'\r\n            : !signer\r\n            ? 'Connect Wallet'\r\n            : 'Withdraw'}\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n","import { promisify } from 'util';\r\n\r\nexport default ms => promisify(setTimeout);\r\n","import React from 'react';\r\nimport Promise from 'bluebird';\r\nimport * as ethers from 'ethers';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ERC20_CONTRACT_ABI from '../abis/erc20.json';\r\nimport { formatUnits } from '../utils/big-number';\r\nimport { useWallet } from '../contexts/wallet';\r\nimport sleep from '../utils/sleep';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {},\r\n}));\r\n\r\nexport default function({ header, isETH, tokenAddress }) {\r\n  const { signer } = useWallet();\r\n  return !signer ? null : isETH ? (\r\n    <ETH {...{ header }} />\r\n  ) : (\r\n    <ERC20 {...{ header, tokenAddress }} />\r\n  );\r\n}\r\n\r\nfunction ETH({ header }) {\r\n  const classes = useStyles();\r\n  const { signer } = useWallet();\r\n  const [balance, setBalance] = React.useState(ethers.BigNumber.from('0'));\r\n\r\n  const load = async () => {\r\n    setBalance(await signer.getBalance());\r\n  };\r\n\r\n  const subscribe = () => {\r\n    const eventName = 'block';\r\n    signer.provider.on(eventName, load);\r\n    return () => {\r\n      signer.provider.off(eventName, load);\r\n    };\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    load();\r\n    return subscribe(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    balance && (\r\n      <div className={classes.container}>\r\n        {header}: {formatUnits(balance, 18)} ETH\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nfunction ERC20({ header, tokenAddress }) {\r\n  const classes = useStyles();\r\n  const [balance, setBalance] = React.useState(ethers.BigNumber.from('0'));\r\n  const [decimals, setDecimals] = React.useState(null);\r\n  const [symbol, setSymbol] = React.useState(null);\r\n  const { address, signer } = useWallet();\r\n\r\n  const contract = React.useMemo(\r\n    () =>\r\n      signer &&\r\n      tokenAddress &&\r\n      new ethers.Contract(tokenAddress, ERC20_CONTRACT_ABI, signer),\r\n    [tokenAddress, signer]\r\n  );\r\n\r\n  const onBalanceChange = async (from, to) => {\r\n    if (from === address || to === address) {\r\n      await sleep(500);\r\n      setBalance(await contract.balanceOf(address));\r\n    }\r\n  };\r\n\r\n  const load = async () => {\r\n    if (!(contract && address)) return;\r\n    const [decimals, symbol, balance] = await Promise.all([\r\n      contract.decimals(),\r\n      contract.symbol(),\r\n      contract.balanceOf(address),\r\n    ]);\r\n    setDecimals(decimals);\r\n    setSymbol(symbol);\r\n    setBalance(balance);\r\n  };\r\n\r\n  const subscribe = () => {\r\n    if (!contract) return () => {};\r\n    const transferEvent = contract.filters.Transfer();\r\n    contract.on(transferEvent, onBalanceChange);\r\n    return () => {\r\n      contract.off(transferEvent, onBalanceChange);\r\n    };\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    load();\r\n    return subscribe(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [contract, address]);\r\n\r\n  return (\r\n    symbol &&\r\n    decimals &&\r\n    balance && (\r\n      <div className={classes.container}>\r\n        {header}: {formatUnits(balance, decimals)} {symbol.toUpperCase()}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import React from 'react';\r\nimport * as ethers from 'ethers';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Button,\r\n  TextField,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { STAKING_ADDRESS, useWallet } from '../contexts/wallet';\r\nimport { useNotifications } from '../contexts/notifications';\r\nimport Balance from '../components/Balance';\r\nimport {\r\n  formatUnits,\r\n  // Big,\r\n  isZero,\r\n  // toFixed\r\n} from '../utils/big-number';\r\nimport { BORDER_RADIUS, EMPTY_CALL_DATA } from '../config';\r\nimport ERC20_CONTRACT_ABI from '../abis/erc20.json';\r\nimport sleep from '../utils/sleep';\r\n// import { useStats } from '../contexts/stats';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  container: {\r\n    '& a': {\r\n      color: theme.palette.secondary.main,\r\n    },\r\n    '& .MuiInputLabel-shrink': {\r\n      right: 0,\r\n      transform: 'translate(0, 1.5px) scale(1)',\r\n      transformOrigin: 'top left',\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  maxButton: {\r\n    height: 35,\r\n  },\r\n  depositButton: {\r\n    width: 200,\r\n  },\r\n  rewards: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexGrow: 1,\r\n    padding: 20,\r\n    borderRadius: BORDER_RADIUS,\r\n    background: '#555',\r\n    color: 'white',\r\n  },\r\n}));\r\n\r\nconst STEPS = ['Get Liquidity Pool Tokens', 'Stake'];\r\n\r\nexport default withRouter(function() {\r\n  const classes = useStyles();\r\n  const activeStep = ~window.location.hash.indexOf('2') ? 1 : 0;\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <Stepper activeStep={activeStep}>\r\n        {STEPS.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n\r\n      <Box mx={5} mb={4}>\r\n        <Switch>\r\n          <Route exact path={'/deposit/2'} component={Deposit} />\r\n          <Route exact path={'/deposit/1'} component={GetLPTokens} />\r\n          <Redirect to={'/deposit/1'} />\r\n        </Switch>\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nfunction GetLPTokens({ history }) {\r\n  const classes = useStyles();\r\n  const {\r\n    startConnecting: startConnectingWallet,\r\n    lpName,\r\n    lpAddress,\r\n    lpDecimals,\r\n    goatAddress,\r\n    address,\r\n    signer,\r\n  } = useWallet();\r\n  const [balance, setBalance] = React.useState(ethers.BigNumber.from('0'));\r\n\r\n  const contract = React.useMemo(\r\n    () =>\r\n      signer &&\r\n      lpAddress &&\r\n      new ethers.Contract(lpAddress, ERC20_CONTRACT_ABI, signer),\r\n    [lpAddress, signer]\r\n  );\r\n\r\n  const onBalanceChange = async (from, to) => {\r\n    if (from === address || to === address) {\r\n      await sleep(500);\r\n      setBalance(await contract.balanceOf(address));\r\n    }\r\n  };\r\n\r\n  const connectWalletOrNext = async () => {\r\n    !address ? startConnectingWallet() : history.push('/deposit/2');\r\n  };\r\n\r\n  const load = async () => {\r\n    if (!(contract && address)) return;\r\n    const balance = await contract.balanceOf(address);\r\n    setBalance(balance);\r\n  };\r\n\r\n  const subscribe = () => {\r\n    if (!contract) return () => {};\r\n    const transferEvent = contract.filters.Transfer();\r\n    contract.on(transferEvent, onBalanceChange);\r\n    return () => {\r\n      contract.off(transferEvent, onBalanceChange);\r\n    };\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    load();\r\n    return subscribe(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [contract, address]);\r\n\r\n  return !(goatAddress && lpAddress) ? null : (\r\n    <>\r\n      {!address ? null : (\r\n        <Box mt={2}>\r\n          <Typography variant=\"h5\">\r\n            You have ≈ {formatUnits(balance, lpDecimals)} {lpName} Tokens.\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n\r\n      <Box mt={2}>\r\n        Get {!address ? `Liquidity Pool Tokens (${lpName})` : 'more'} by\r\n        providing liquidity to the GOAT-BNB Pool over{' '}\r\n        <a\r\n          href={`https://exchange.pancakeswap.finance/#/add/ETH/0x7c67dccb04b67d4666fd97b2a00bb6d9b8d82e3f`}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          here\r\n        </a>\r\n        .\r\n      </Box>    \r\n\r\n      <Box mt={2}>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          onClick={connectWalletOrNext}\r\n          className={classes.depositButton}\r\n        >\r\n          {!address ? 'Connect Wallet' : 'Stake →'}\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Deposit() {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    startConnecting: startConnectingWallet,\r\n    signer,\r\n    address,\r\n    stakingContract,\r\n    lpContract,\r\n    lpDecimals,\r\n    lpName,\r\n    lpAddress,\r\n  } = useWallet();\r\n\r\n /* const {\r\n    monthlyUnlockRate,\r\n    totalStakingShares,\r\n    totalStaked,\r\n    totalStakingShareSeconds,\r\n    totalStakedFor,\r\n    userStakingShareSeconds,\r\n    stakingEndSec,\r\n  } = useStats();\r\n*/\r\n  const [isApproving, setIsApproving] = React.useState(false);\r\n  const [isApproved, setIsApproved] = React.useState(false);\r\n  const [isDepositing, setIsDepositing] = React.useState(false);\r\n\r\n  const { showTxNotification, showErrorNotification } = useNotifications();\r\n  const [inputAmount, setInputAmount] = React.useState(0);\r\n  const [depositMaxAmount, setDepositMaxAmount] = React.useState(false);\r\n  const [maxDepositAmount, setMaxDepositAmount] = React.useState(\r\n    ethers.BigNumber.from('0')\r\n  );\r\n  const depositAmount = React.useMemo(() => {\r\n    let inputAmountBN;\r\n    try {\r\n      inputAmountBN = ethers.utils.parseUnits(\r\n        inputAmount.toString(),\r\n        lpDecimals\r\n      );\r\n    } catch (e) {\r\n      inputAmountBN = ethers.BigNumber.from('0');\r\n    }\r\n    return depositMaxAmount ? maxDepositAmount : inputAmountBN;\r\n  }, [inputAmount, maxDepositAmount, depositMaxAmount, lpDecimals]);\r\n\r\n  const onConnectOrApproveOrDeposit = async () => {\r\n    if (!signer) {\r\n      return startConnectingWallet();\r\n    }\r\n    !isApproved ? approve() : deposit();\r\n  };\r\n\r\n  const approve = async () => {\r\n    try {\r\n      setIsApproving(true);\r\n      const tx = await lpContract.approve(STAKING_ADDRESS, depositAmount);\r\n      showTxNotification(`Approving ${lpName}`, tx.hash);\r\n      await tx.wait();\r\n      showTxNotification(`Approved ${lpName}`, tx.hash);\r\n      await checkAllowance();\r\n    } catch (e) {\r\n      showErrorNotification(e);\r\n    } finally {\r\n      setIsApproving(false);\r\n    }\r\n  };\r\n\r\n  const deposit = async () => {\r\n    try {\r\n      if (depositAmount.isZero())\r\n        return showErrorNotification('Enter deposit amount.');\r\n      if (!depositMaxAmount && depositAmount.gt(maxDepositAmount)) {\r\n        return showErrorNotification(\r\n          'You are trying to deposit more than your actual balance.'\r\n        );\r\n      }\r\n      setIsDepositing(true);\r\n      const tx = await stakingContract.stake(depositAmount);\r\n      showTxNotification(`Depositing ${lpName}`, tx.hash);\r\n      await tx.wait();\r\n      showTxNotification(`Deposited ${lpName}`, tx.hash);\r\n      onSetDepositMaxAmount();\r\n    } catch (e) {\r\n      showErrorNotification(e);\r\n    } finally {\r\n      setIsDepositing(false);\r\n    }\r\n  };\r\n\r\n  const checkAllowance = async () => {\r\n    if (!(lpContract && address)) return setIsApproved(true);\r\n    const allowance = await lpContract.allowance(address, STAKING_ADDRESS);\r\n    setIsApproved(allowance.gte(depositAmount));\r\n  };\r\n\r\n  // const monthlyGoatRewards = React.useMemo(() => {\r\n  //   if (\r\n  //     !(\r\n  //       depositAmount &&\r\n  //       !isZero(monthlyUnlockRate) &&\r\n  //       !isZero(totalStakingShares) &&\r\n  //       !isZero(totalStaked) &&\r\n  //       totalStakingShareSeconds &&\r\n  //       totalStakedFor &&\r\n  //       userStakingShareSeconds &&\r\n  //       lpDecimals &&\r\n  //       stakingEndSec\r\n  //     )\r\n  //   )\r\n  //     return Big('0');\r\n\r\n  //   const n = Big(depositAmount).div(10 ** lpDecimals);\r\n  //   if (isZero(n)) return Big('0');\r\n\r\n  //   const r = Big(2592e3);\r\n  //   const t = {\r\n  //     totalStakingShares,\r\n  //     totalStaked: totalStaked.div(10 ** lpDecimals),\r\n  //     totalStakingShareSeconds,\r\n  //   };\r\n  //   const e = {\r\n  //     totalStakedFor: totalStakedFor.div(10 ** lpDecimals),\r\n  //     userStakingShareSeconds,\r\n  //   };\r\n  //   const i = e.totalStakedFor.mul(t.totalStakingShares).div(t.totalStaked);\r\n  //   const o = n.mul(t.totalStakingShares).div(t.totalStaked);\r\n  //   const a1 = e.userStakingShareSeconds.add(i.add(o).mul(r));\r\n  //   const a2 = t.totalStakingShareSeconds.add(\r\n  //     t.totalStakingShares.add(o).mul(r)\r\n  //   );\r\n  //   const a = a1.div(a2);\r\n\r\n  //   // console.log(\r\n  //   //   Object.entries({\r\n  //   //     totalStakingShares: t.totalStakingShares,\r\n  //   //     totalStaked: t.totalStaked,\r\n  //   //     totalStakingShareSeconds: t.totalStakingShareSeconds,\r\n  //   //     totalStakedFor: e.totalStakedFor,\r\n  //   //     userStakingShareSeconds: e.userStakingShareSeconds,\r\n  //   //   }).reduce((r, [k, v]) => {\r\n  //   //     r[k] = v.toString();\r\n  //   //     return r;\r\n  //   //   }, {})\r\n  //   // );\r\n  //   // console.log(n.toString(), a.toString(), monthlyUnlockRate.toString());\r\n\r\n  //   let estimate = a.mul(monthlyUnlockRate).div(100);\r\n  //   if (moment.utc().isAfter(moment.unix(stakingEndSec))) {\r\n  //     estimate = estimate.mul(stakingEndSec).div(r);\r\n  //   }\r\n  //   return estimate;\r\n  // }, [\r\n  //   depositAmount,\r\n  //   monthlyUnlockRate,\r\n  //   totalStakingShares,\r\n  //   totalStaked,\r\n  //   totalStakingShareSeconds,\r\n  //   totalStakedFor,\r\n  //   userStakingShareSeconds,\r\n  //   lpDecimals,\r\n  //   stakingEndSec,\r\n  // ]);\r\n\r\n  const onSetDepositAmount = event => {\r\n    setDepositMaxAmount(false);\r\n    setInputAmount(event.target.value);\r\n  };\r\n\r\n  const onSetDepositMaxAmount = async () => {\r\n    if (!(lpContract && address)) return;\r\n    const depositAmount = await lpContract.balanceOf(address);\r\n    if (isZero(depositAmount)) return;\r\n    setInputAmount(formatUnits(depositAmount, lpDecimals, 18));\r\n    setDepositMaxAmount(true);\r\n    setMaxDepositAmount(depositAmount);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    checkAllowance();\r\n  }, [lpContract, address, depositAmount]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  React.useEffect(() => {\r\n    onSetDepositMaxAmount();\r\n  }, [lpContract, address]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      {!lpName ? null : (\r\n        <div className={'flex'}>\r\n          <TextField\r\n            id=\"amount\"\r\n            value={inputAmount}\r\n            label={\r\n              <div className=\"flex flex-grow justify-space\">\r\n                <div className=\"flex-grow\">Deposit Amount ({lpName})</div>\r\n                <div>\r\n                  <Balance header=\"Available\" tokenAddress={lpAddress} />\r\n                </div>\r\n              </div>\r\n            }\r\n            type=\"number\"\r\n            step=\"any\"\r\n            className={classes.input}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            fullWidth\r\n            onChange={onSetDepositAmount}\r\n          />\r\n\r\n          <Box className=\"flex items-end\" pl={2}>\r\n            <Button\r\n              color=\"default\"\r\n              variant=\"outlined\"\r\n              onClick={onSetDepositMaxAmount}\r\n              disabled={!(lpContract && address)}\r\n              className={classes.maxButton}\r\n            >\r\n              MAX\r\n            </Button>\r\n          </Box>\r\n        </div>\r\n      )}\r\n\r\n      <Box mt={2}>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          disabled={isDepositing || isApproving}\r\n          onClick={onConnectOrApproveOrDeposit}\r\n          className={classes.depositButton}\r\n        >\r\n          {isDepositing\r\n            ? 'Depositing...'\r\n            : isApproving\r\n            ? 'Approving...'\r\n            : !signer\r\n            ? 'Connect Wallet'\r\n            : !isApproved\r\n            ? 'Approve'\r\n            : 'Deposit'}\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Paper } from '@material-ui/core';\r\nimport { BORDER_RADIUS } from '../config';\r\nimport { toFixed, isZero } from '../utils/big-number';\r\nimport { useStats } from '../contexts/stats';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'grid',\r\n    gridTemplateRows: '1fr 1fr 1fr',\r\n    gridTemplateColumns: '1fr 1fr',\r\n    columnGap: '10px',\r\n    rowGap: '10px',\r\n  },\r\n  box: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    borderRadius: BORDER_RADIUS,\r\n    background: theme.palette.isDark ? '#555' : '#fff',\r\n    color: theme.palette.isDark ? 'white' : '#373836',\r\n  },\r\n}));\r\n\r\nexport default function() {\r\n  const classes = useStyles();\r\n\r\n  const { totalUSDDeposits, stakingEndSec } = useStats();\r\n\r\n  const stats = React.useMemo(\r\n    () => [\r\n      {\r\n        name: 'Total Deposits',\r\n        value: [`${toFixed(totalUSDDeposits, 1, 2)} USD`],\r\n      },\r\n\r\n      {\r\n        name: 'Program duration',\r\n        value: [<Countdown to={stakingEndSec} />],\r\n      },\r\n    ],\r\n    [totalUSDDeposits, stakingEndSec]\r\n  );\r\n\r\n  return (\r\n    <Box className={clsx(classes.container)}>\r\n      {stats.map(s => (\r\n        <StatBox key={s.name} {...s} />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction StatBox({ name, value }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={clsx(classes.box)}>\r\n      <div>{name}</div>\r\n      <div>\r\n        {value.map((v, i) => (\r\n          <div key={i}>{v}</div>\r\n        ))}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nfunction Countdown({ to }) {\r\n  const [duration, setDuration] = React.useState('-');\r\n\r\n  React.useEffect(() => {\r\n    if (isZero(to)) return;\r\n    let id = setInterval(() => {\r\n      if (moment.unix(to).isBefore(moment.utc())) {\r\n        setDuration('Ended');\r\n        clearInterval(id);\r\n        id = null;\r\n        return;\r\n      }\r\n      setDuration(`${moment.unix(to).from(moment.utc(), true)} left`);\r\n    }, 1000);\r\n    return () => {\r\n      if (id) clearInterval(id);\r\n    };\r\n  }, [to]);\r\n\r\n  return <div>{duration}</div>;\r\n}\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function({\r\n  size = 40,\r\n  opacity = 1,\r\n  fullscreen,\r\n  color = 'inherit',\r\n}) {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n        ...(fullscreen\r\n          ? {\r\n              position: 'fixed',\r\n              left: 0,\r\n              right: 0,\r\n              top: 0,\r\n              bottom: 0,\r\n            }\r\n          : {}),\r\n        zIndex: 1000,\r\n        opacity,\r\n      }}\r\n    >\r\n      <div style={{ position: 'relative' }}>\r\n        <CircularProgress\r\n          style={{ position: 'relative' }}\r\n          left={0}\r\n          top={0}\r\n          {...{ size, color }}\r\n          status=\"Drinking goat some milk\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Dialog,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { Close as Icon } from '@material-ui/icons';\r\nimport { formatUnits } from '../utils/big-number';\r\nimport { useNotifications } from '../contexts/notifications';\r\nimport { useWallet } from '../contexts/wallet';\r\nimport Loader from '../components/Loader';\r\nimport { useBonuses } from '../contexts/bonuses';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    width: 500,\r\n    height: 400,\r\n    padding: '0 20px 10px',\r\n    lineHeight: '1.5rem',\r\n  },\r\n  x: {\r\n    position: 'absolute',\r\n    top: 5,\r\n    right: 5,\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nexport default function({ history }) {\r\n  const classes = useStyles();\r\n  const { drops, isLoaded } = useBonuses();\r\n\r\n  const close = () => history.push('/');\r\n\r\n  return (\r\n    <Dialog onClose={close} aria-labelledby=\"bonus\" open={true}>\r\n      <div className={clsx('flex', 'flex-grow', 'flex-col', classes.container)}>\r\n        <>\r\n          <div className={classes.x}>\r\n            <Icon style={{ fontSize: 20 }} onClick={close} />\r\n          </div>\r\n          <h3>Claim Bonuses</h3>\r\n\r\n          {!isLoaded ? (\r\n            <Loader />\r\n          ) : (\r\n            <Table className={classes.tablex} aria-label=\"Bonus\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Date</TableCell>\r\n                  <TableCell>Amount</TableCell>\r\n                  <TableCell align=\"right\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {drops.map(drop => (\r\n                  <Drop key={drop.date} {...drop} />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction Drop({ date, canClaim, didClaim, contract, claimInfo }) {\r\n  const classes = useStyles();\r\n  const [isWorking, setIsWorking] = React.useState(null);\r\n  const { address } = useWallet();\r\n  const { tx } = useNotifications();\r\n\r\n  const claim = async () => {\r\n    setIsWorking('Claiming...');\r\n    try {\r\n      await tx('Claiming...', 'Claimed!', () =>\r\n        contract.claim(\r\n          claimInfo.index,\r\n          address,\r\n          claimInfo.amount,\r\n          claimInfo.proof\r\n        )\r\n      );\r\n    } finally {\r\n      setIsWorking(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableRow className={classes.rowx}>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n        {date}\r\n      </TableCell>\r\n      <TableCell>\r\n        {canClaim ? formatUnits(parseInt(Number(claimInfo.amount), 10), 18) : 0}{' '}\r\n        BNB\r\n      </TableCell>\r\n      <TableCell align=\"right\">\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          onClick={claim}\r\n          disabled={!!isWorking || !canClaim || didClaim}\r\n        >\r\n          {isWorking ? isWorking : didClaim ? 'CLAIMED' : 'CLAIM'}\r\n        </Button>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Dialog } from '@material-ui/core';\r\nimport { Close as Icon } from '@material-ui/icons';\r\nimport { useWallet } from '../contexts/wallet';\r\nimport { NETWORK_NAME } from '../config';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    width: 350,\r\n    padding: '0 20px 10px',\r\n    lineHeight: '1.5rem',\r\n    '& button': {\r\n      width: '100%',\r\n      padding: '10px 0',\r\n      marginTop: 20,\r\n      fontSize: 18,\r\n    },\r\n  },\r\n  x: {\r\n    position: 'absolute',\r\n    top: 5,\r\n    right: 5,\r\n    cursor: 'pointer',\r\n  },\r\n  wallet: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    margin: '10px 0',\r\n    '& img': {\r\n      marginRight: 15,\r\n    },\r\n    '&:hover': {\r\n      opacity: 0.8,\r\n    },\r\n  },\r\n  net: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default function() {\r\n  const classes = useStyles();\r\n  const wallet = useWallet();\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={() => {}}\r\n      aria-labelledby=\"wrong-network-prompt\"\r\n      open={wallet.isOnWrongNetwork || wallet.isConnecting}\r\n    >\r\n      <div className={clsx('flex', 'flex-grow', 'flex-col', classes.container)}>\r\n        {!wallet.isOnWrongNetwork ? (\r\n          <>\r\n            <div className={classes.x}>\r\n              <Icon style={{ fontSize: 20 }} onClick={wallet.stopConnecting} />\r\n            </div>\r\n            <h3>Connect Wallet</h3>\r\n            <div className={clsx('flex', 'flex-col')}>\r\n              <div\r\n                onClick={wallet.connectMetamask}\r\n                className={clsx(classes.wallet)}\r\n              >\r\n                <img\r\n                  src=\"wallets/metamask.svg\"\r\n                  width=\"35\"\r\n                  height=\"35\"\r\n                  alt=\"metamask wallet\"\r\n                />\r\n                <div>Metamask</div>\r\n              </div>\r\n              <div onClick={wallet.connectBsc} className={clsx(classes.wallet)}>\r\n                <img\r\n                  src=\"wallets/bsc.png\"\r\n                  width=\"35\"\r\n                  height=\"35\"\r\n                  alt=\"bsc wallet\"\r\n                />\r\n                <div>Binance Wallet</div>\r\n              </div>\r\n              <div\r\n                onClick={wallet.connectTrust}\r\n                className={clsx(classes.wallet)}\r\n              >\r\n                <img\r\n                  src=\"wallets/trust.svg\"\r\n                  width=\"35\"\r\n                  height=\"35\"\r\n                  alt=\"trust wallet\"\r\n                />\r\n                <div>Trust Wallet</div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <Box\r\n            mt={2}\r\n            className={clsx(\r\n              'flex',\r\n              'flex-col',\r\n              'items-center',\r\n              'justify-center',\r\n              'text-center'\r\n            )}\r\n          >\r\n            <div>You are connected to the wrong network</div>\r\n            <strong>\r\n              Please connect to Binance Smart Chain{' '}\r\n              <span className={classes.net}>{NETWORK_NAME}</span>\r\n            </strong>\r\n            <div>or</div>\r\n            <div className=\"cursor-pointer\" onClick={wallet.disconnect}>\r\n              disconnect\r\n            </div>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { Paper, Box } from '@material-ui/core';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  Link,\r\n} from 'react-router-dom';\r\nimport { BORDER_RADIUS, ROUTER_BASE_NAME } from '../config';\r\nimport Header from './Header';\r\nimport TopStats from './TopStats';\r\nimport Nav from './Nav';\r\nimport Withdraw from './Withdraw';\r\nimport Deposit from './Deposit';\r\nimport Stats from './Stats';\r\nimport Bonus from './Bonus';\r\nimport ConnectWallet from './ConnectWallet';\r\nimport { useBonuses } from '../contexts/bonuses';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    width: '960px',\r\n    margin: '0 auto',\r\n    padding: '100px 0 30px',\r\n    position: 'relative',\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: '70px 0 10px',\r\n      width: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    borderRadius: BORDER_RADIUS,\r\n  },\r\n  tabContent: {\r\n    padding: 20,\r\n  },\r\n  announcement: {\r\n    color: theme.palette.isDark ? '#aaa' : '#777',\r\n  },\r\n  announcementHere: {\r\n    color: theme.palette.isDark ? '#ddd' : '#888',\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const { hasPendingBonusClaim } = useBonuses();\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <Router basename={ROUTER_BASE_NAME}>\r\n        <Header />\r\n        <TopStats />\r\n        <Paper className={classes.paper}>\r\n          <Nav />\r\n          <Box className={classes.tabContent}>\r\n            <Switch>\r\n              <Route path={'/deposit'} component={Deposit} /> \r\n              <Route exact path={'/withdraw'} component={Withdraw} />\r\n              <Route exact path={'/stats'} component={Stats} />\r\n              <Route exact path={'/bonus'} component={Bonus} />\r\n              <Redirect to={'/deposit'} />\r\n            </Switch>\r\n          </Box>\r\n        </Paper>\r\n        <ConnectWallet />\r\n      </Router>\r\n    </Box>\r\n  );\r\n}\r\n","import './styles';\r\n\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport {\r\n  ThemeProvider as MuiThemeProvider,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nimport { ThemeProvider, useTheme, useMuiTheme } from './contexts/theme';\r\nimport { WalletProvider } from './contexts/wallet';\r\nimport { NotificationsProvider } from './contexts/notifications';\r\nimport { StatsProvider } from './contexts/stats';\r\nimport { BonusesProvider } from './contexts/bonuses';\r\nimport Notification from './components/Notification';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './pages/App';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  snackbar: {\r\n    top: 70,\r\n  },\r\n}));\r\n\r\n(async () => {\r\n  document.documentElement.classList.remove('boot-loader');\r\n  document.getElementById('loader-container').remove();\r\n  const root = document.createElement('div');\r\n  root.setAttribute('id', 'root');\r\n  document.body.appendChild(root);\r\n\r\n  render(\r\n    <ThemeProvider>\r\n      <Shell />\r\n    </ThemeProvider>,\r\n    document.getElementById('root')\r\n  );\r\n})();\r\n\r\nfunction Shell() {\r\n  const classes = useStyles();\r\n  const { isDark } = useTheme();\r\n  const muiTheme = useMuiTheme();\r\n\r\n  React.useEffect(() => {\r\n    const root = document.documentElement;\r\n    if (root.classList.contains(isDark ? 'light' : 'dark')) {\r\n      root.classList.remove(isDark ? 'light' : 'dark');\r\n      root.classList.add(isDark ? 'dark' : 'light');\r\n    }\r\n  }, [isDark]);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={muiTheme}>\r\n      <CssBaseline />\r\n      <SnackbarProvider\r\n        classes={{ root: classes.snackbar }}\r\n        maxSnack={4}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        content={(key, data) => (\r\n          <div>\r\n            <Notification id={key} notification={data} />\r\n          </div>\r\n        )}\r\n      >\r\n        <NotificationsProvider>\r\n          <WalletProvider>\r\n            <StatsProvider>\r\n              <BonusesProvider>\r\n                <App />\r\n              </BonusesProvider>\r\n            </StatsProvider>\r\n          </WalletProvider>\r\n        </NotificationsProvider>\r\n      </SnackbarProvider>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}